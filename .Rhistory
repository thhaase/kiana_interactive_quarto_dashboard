# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
custom_palette <- colorRampPalette(c("#6ede8a","#2dc653","#2dc653",
"#25a244","#208b3a","#1a7431",
"#155d27","#10451d"))
get_custom_color_scale <- function(data, column) {
unique_items <- length(unique(data[[column]]))
colors <- custom_palette(unique_items)
color_scale <- scale_colour_manual(values = colors)
return(color_scale)
}
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
mutate(color = custom_palette(n())) %>%  # Assign colors based on the number of unique themes
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
custom_palette <- colorRampPalette(c("#6ede8a","#2dc653","#2dc653",
"#25a244","#208b3a","#1a7431",
"#155d27","#10451d"))
get_custom_color_scale <- function(data, column) {
unique_items <- length(unique(data[[column]]))
colors <- custom_palette(unique_items)
color_scale <- scale_colour_manual(values = colors)
return(color_scale)
}
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
custom_palette <- colorRampPalette(c("#6ede8a","#2dc653","#2dc653",
"#25a244","#208b3a","#1a7431",
"#155d27","#10451d"))
get_custom_color_scale <- function(data, column) {
unique_items <- length(unique(data[[column]]))
colors <- custom_palette(unique_items)
color_scale <- scale_colour_manual(values = colors)
return(color_scale)
}
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
custom_palette <- colorRampPalette(c("#6ede8a","#2dc653","#2dc653",
"#25a244","#208b3a","#1a7431",
"#155d27","#10451d"))
get_custom_color_scale <- function(data, column) {
unique_items <- length(unique(data[[column]]))
colors <- custom_palette(unique_items)
color_scale <- scale_colour_manual(values = colors)
return(color_scale)
}
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
mutate(color = custom_palette(n())) %>%  # Assign colors based on the number of unique themes
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
custom_palette <- colorRampPalette(c("#6ede8a","#2dc653","#2dc653",
"#25a244","#208b3a","#1a7431",
"#155d27","#10451d"))
get_custom_color_scale <- function(data, column) {
unique_items <- length(unique(data[[column]]))
colors <- custom_palette(unique_items)
color_scale <- scale_colour_manual(values = colors)
return(color_scale)
}
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
mutate(color = custom_palette(n())) %>%  # Assign colors based on the number of unique themes
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
mutate(color = custom_palette(n())) %>%  # Assign colors based on the number of unique themes
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color)) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
data %>%
mutate(response = str_split(An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören.., ";")) %>%
unnest(response) %>%
group_by(response) %>%
summarise(Frequency = n()) %>%
mutate(response = factor(response, levels = unique(response))) %>%  # Ensure levels are in the same order as they appear
mutate(Index = as.integer(response)) %>%  # Create an index based on the factor levels
ungroup() %>%
arrange(Index) %>%
mutate(Color = custom_palette(length(unique(response)))[Index]) %>%  # Apply colors based on the index
plot_ly(x = ~response, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~Color)) %>%
layout(title = '',
xaxis = list(title = '', tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))```
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
mutate(Index = as.integer(response)) %>%  # Create an index based on the factor levels
ungroup() %>%
arrange(Index) %>%
mutate(Color = custom_palette(length(unique(response)))[Index]) %>%  # Apply colors based on the index
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color)) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
custom_palette <- colorRampPalette(c("#6ede8a","#2dc653","#2dc653",
"#25a244","#208b3a","#1a7431",
"#155d27","#10451d"))
get_custom_color_scale <- function(data, column) {
unique_items <- length(unique(data[[column]]))
colors <- custom_palette(unique_items)
color_scale <- scale_colour_manual(values = colors)
return(color_scale)
}
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
mutate(Index = as.integer(response)) %>%  # Create an index based on the factor levels
ungroup() %>%
arrange(Index) %>%
mutate(Color = custom_palette(length(unique(response)))[Index]) %>%  # Apply colors based on the index
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color)) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(Index = as.integer(response)) %>%
ungroup() %>%
arrange(Index) %>%
mutate(Color = custom_palette(length(unique(.$response)))[Index]) %>%
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color)) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(Index = as.integer(response)) %>%
ungroup() %>%
arrange(Index) %>%
mutate(Color = custom_palette(length(unique(response)))[Index]) %>%
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color)) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
custom_palette <- colorRampPalette(c("#6ede8a","#2dc653","#2dc653",
"#25a244","#208b3a","#1a7431",
"#155d27","#10451d"))
get_custom_color_scale <- function(data, column) {
unique_items <- length(unique(data[[column]]))
colors <- custom_palette(unique_items)
color_scale <- scale_colour_manual(values = colors)
return(color_scale)
}
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(Index = as.integer(response)) %>%
ungroup() %>%
arrange(Index) %>%
mutate(Color = custom_palette(length(unique(response)))[Index]) %>%
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~color)) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(Index = as.integer(response)) %>%
ungroup() %>%
arrange(Index) %>%
mutate(color = custom_palette(length(unique(response)))[Index]) %>%
plot_ly(x = ~themes,
y = ~Frequency,
type = 'bar',
name = 'Sustainability Themes',
marker = list(color = ~color)
) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(Index = as.integer(response)) %>%
ungroup() %>%
arrange(Index)
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..)
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes)
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)]))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(Index = as.integer(response)) %>%
ungroup()
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)]))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes)
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency")
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)]))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(Index = as.integer(frequency)) %>%
ungroup() %>%
arrange(Index) %>%
mutate(color = custom_palette(length(unique(response)))[Index]) %>%
plot_ly(x = ~themes,
y = ~Frequency,
type = 'bar',
name = 'Sustainability Themes',
marker = list(color = ~color)
) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%
mutate(ID = as.integer(frequency)) %>%
ungroup() %>%
arrange(ID) %>%
mutate(color = custom_palette(length(unique(frequency)))[ID]) %>%
plot_ly(x = ~themes,
y = ~Frequency,
type = 'bar',
name = 'Sustainability Themes',
marker = list(color = ~color)
) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~-Frequency,
colorscale = list(c(0, 'red'), c(0.5, 'green'), c(1, 'blue')))) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~-Frequency,
colorscale = list(c(0, '#10451d'), c(1, '#2dc653')))) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~-Frequency,
colorscale = list(c(0, '#10451d'), c(1, '#6ede8a')))) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
library(crosstalk)
library(DT)
library(plotly)
library(RColorBrewer)
library(knitr)
library(tidyverse)
library(tidytext)
# load data ----
data <- read.csv("data.csv") %>%
mutate(ID = row_number()) %>%
select(-Zeitstempel)
# create shared data for crosstalk
shared_data <- SharedData$new(data, key = ~ID)
tibble(response = data$An.was.denken.Sie..wenn.Sie.den.Begriff.Nachhaltigkeit.hören..) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~-Frequency,
colorscale = list(c(0, '#10451d'), c(1, '#6ede8a')))) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(rating = data$Ist.es.für.Sie.wichtig.Ihren.Wohnraum.und.ihre.Einrichtung.nachhaltig.zu.gestalten.) %>%
count(rating, name = "Frequency") %>%
#  mutate(rating = factor(rating, levels = rating[order(-Frequency)])) %>%
plot_ly(x = ~rating, y = ~Frequency, type = 'bar', name = 'Importance Ratings',
marker = list(color = ~-Frequency,
colorscale = 'Greens')) %>%
layout(title = '',
xaxis = list(title = '',
tickvals = ~rating,
ticktext = c('1 \n Äußerst wichtig', '2', '3', '4 \n Überhaupt nicht wichtig'),
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(rating = data$Ist.es.für.Sie.wichtig.Ihren.Wohnraum.und.ihre.Einrichtung.nachhaltig.zu.gestalten.) %>%
count(rating, name = "Frequency") %>%
#  mutate(rating = factor(rating, levels = rating[order(-Frequency)])) %>%
plot_ly(x = ~rating, y = ~Frequency, type = 'bar', name = 'Importance Ratings',
marker = list(color = ~-Frequency,
colorscale = list(c(0, '#10451d'), c(1, '#6ede8a')))) %>%
layout(title = '',
xaxis = list(title = '',
tickvals = ~rating,
ticktext = c('1 \n Äußerst wichtig', '2', '3', '4 \n Überhaupt nicht wichtig'),
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$Hätten.Sie.Interesse..an.einem.Upcycling.Workshop.teilzunehmen.) %>%
filter(response %in% c("Ja", "Nein")) %>%
count(response, name = "Frequency") %>%
mutate(response = factor(response, levels = response[order(-Frequency)])) %>%
plot_ly(x = ~response, y = ~Frequency, type = 'bar', name = 'Workshop Interest',
marker = list(color = ~-Frequency,
colorscale = 'Viridis')) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$Hätten.Sie.Interesse..an.einem.Upcycling.Workshop.teilzunehmen.) %>%
filter(response %in% c("Ja", "Nein")) %>%
count(response, name = "Frequency") %>%
mutate(response = factor(response, levels = response[order(-Frequency)])) %>%
plot_ly(x = ~response, y = ~Frequency, type = 'bar', name = 'Workshop Interest',
marker = list(color = ~-Frequency,
colorscale = list(c(0, '#10451d'), c(1, '#6ede8a')))) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
tibble(response = data$Wie.haben.Sie.bisher.Informationen.darüber.erhalten..wie.man.nachhaltig..Wohnen..kann.) %>%
mutate(themes = str_split(response, ";")) %>%
unnest(themes) %>%
count(themes, name = "Frequency") %>%
mutate(themes = recode(themes, "Ich habe bislang keine Informationen über nachhaltiges Wohnen erlangt." = "Bisher keine \nInformationen erhalten")) %>%
mutate(themes = factor(themes, levels = themes[order(-Frequency)])) %>%  # Reorder factor levels
plot_ly(x = ~themes, y = ~Frequency, type = 'bar', name = 'Sustainability Themes',
marker = list(color = ~-Frequency,
colorscale = list(c(0, '#10451d'), c(1, '#6ede8a')))) %>%
layout(title = '',
xaxis = list(title = '',
tickangle = -45),
yaxis = list(title = 'Antworthäufigkeit'))
